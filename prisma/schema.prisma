generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Channel {
  WOPHI
  LUMIN
  MIAU
}

enum UserStatus {
  PENDING_CONFIRMATION
  ACTIVE
  CANCELLED
  BANNED
}

model UserPersonalInfo {
  id          String   @id @default(uuid()) @db.Uuid
  first_name  String   @db.VarChar(125)
  last_name   String   @db.VarChar(125)
  cpf         String   @db.VarChar(11)
  social_name String?  @db.VarChar(250)
  born_date   DateTime
  mother_name String   @db.VarChar(250)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()

  User User[]

  @@map("users_personal_info")
}

model UserContactInfo {
  id       String  @id @default(uuid()) @db.Uuid
  username String? @db.VarChar(45)
  email    String  @unique @db.VarChar(250)
  phone    String  @unique @db.VarChar(15)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
  User       User[]

  @@map("users_contact_info")
}

model UserSecurityInfo {
  id                   String     @id @default(uuid()) @db.Uuid
  password             String
  salt                 String
  confirmation_token   String?    @unique @db.VarChar(64)
  recover_token        String?    @db.VarChar(64)
  token_expires_at     DateTime?
  ip_address_origin    String     @db.Inet()
  on_update_ip_address String?    @db.Inet()
  status               UserStatus

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()
  User       User[]

  @@map("users_security_info")
}

model User {
  id                    String    @id @unique @default(uuid()) @db.Uuid
  user_personal_info_id String    @db.Uuid
  user_contact_info_id  String    @db.Uuid
  user_security_info_id String    @db.Uuid
  origin_channel        Channel
  allowed_channels      Channel[]

  created_at DateTime         @default(now())
  updated_at DateTime         @updatedAt()
  personal   UserPersonalInfo @relation(fields: [user_personal_info_id], references: [id])
  contact    UserContactInfo  @relation(fields: [user_contact_info_id], references: [id])
  security   UserSecurityInfo @relation(fields: [user_security_info_id], references: [id])

  @@map("users")
}
